<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Unity Architecture</title>
      <link href="/2019/09/10/unity-architecture/"/>
      <url>/2019/09/10/unity-architecture/</url>
      
        <content type="html"><![CDATA[<h3 id="The-basic-unity3d-architecture"><a href="#The-basic-unity3d-architecture" class="headerlink" title="The basic unity3d architecture"></a>The basic unity3d architecture</h3><ul><li>Scene Graphic<ul><li>GameObject</li><li>Component</li></ul></li><li>Resources<ul><li>Prefab</li><li>Texture</li><li>Spine Animation</li><li>Texture Atlas</li><li>text</li><li>Script</li><li>etc.</li></ul></li></ul><h3 id="1-Scene-Graphic"><a href="#1-Scene-Graphic" class="headerlink" title="1, Scene Graphic"></a>1, Scene Graphic</h3><p>That every thing in the Scene is <code>GameObject</code>, and the behaviour of the GameObject is <code>MonoBehaviour</code>, the script that can add to the GameObject as a <code>Component</code>.</p><p>If the GameObject is disabled in the Editor, the Components that has been added to it will not be called until we call <code>go.SetActive(true)</code> in other scripts. Therefore if you find the <code>SkeletonGraphic.AnimationState == null</code>, may be you have been disable it.</p><h3 id="2-Life-Cycle-of-a-Script-that-extends-MonoBehaviour"><a href="#2-Life-Cycle-of-a-Script-that-extends-MonoBehaviour" class="headerlink" title="2, Life Cycle of a Script that extends MonoBehaviour"></a>2, Life Cycle of a Script that extends MonoBehaviour</h3><p>If the GameObject is disabled in the editor, it will be silent and not be called, you can’t <code>GameObject.Find</code> it either.</p><p>Otherwise, the GameObject’s Script will be called after been <code>Instantiate</code></p><ul><li><code>SceneManager.LoadScene</code></li><li><code>Awake</code> called once time before destroyed</li><li><code>OnEnable</code> called when <code>SetActive(true)</code> or after <code>Instantiate</code></li><li><code>Start</code> called once time before destroyed</li><li><code>FixedUpdate</code> called one more time each frame, according to the Physics system</li><li><code>Update</code> called each frame</li><li><code>LateUpdate</code> called each frame after all script <code>Update</code></li><li><code>OnDisable</code> called when <code>SetActive(false)</code></li><li><code>OnDestroy</code> called when it <code>Object.Destroy</code> or <code>SceneManager.UnloadScene</code></li></ul><h3 id="3-Life-Cycle-of-a-Script-that-not-extend-MonoBehaviour"><a href="#3-Life-Cycle-of-a-Script-that-not-extend-MonoBehaviour" class="headerlink" title="3, Life Cycle of a Script that not extend MonoBehaviour"></a>3, Life Cycle of a Script that not extend MonoBehaviour</h3><p>Well, it’s life cycle is according to you, you let it die, it die, you let it live, it lives.</p><h3 id="4-How-to-move-GameObject-into-other-GameObject-for-Compositing-complex-object"><a href="#4-How-to-move-GameObject-into-other-GameObject-for-Compositing-complex-object" class="headerlink" title="4, How to move GameObject into other GameObject for Compositing complex object"></a>4, How to move GameObject into other GameObject for Compositing complex object</h3><p>Easy, <code>this.gameObject.transform.SetParent(otherGameObject.transform, false/true)</code></p><ul><li>false indicates this game object will move to other game object position, well, the <code>transform.localPosition = new Vector3(0, 0, 0)</code></li><li>true indicates this game object stay in origin position, like below<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var worldPos = this.gameObject.transform.position;</span><br><span class="line">this.gameObject.transform.SetParent(other.gameObject.transform, false);</span><br><span class="line">this.gameObject.transform.position = worldPos;</span><br></pre></td></tr></table></figure></li></ul><p>If the GameObject that created under Canvas, the transform is <code>RectTransform</code>, the <code>localPosition</code> is <code>anchoredPosition</code></p><h3 id="5-The-order-of-the-Scripts-in-the-Scene"><a href="#5-The-order-of-the-Scripts-in-the-Scene" class="headerlink" title="5, The order of the Scripts in the Scene"></a>5, The order of the Scripts in the Scene</h3><ul><li><p>The Components in one GameObject</p><p> it will be called one by one</p></li><li><p>The Components among many GameObjects</p><p>the order is not defined, but we know that all scripts will be <code>Awake</code> first and then <code>Start</code> etc. Therefore, we can initialize the Component itself in <code>Awake</code> and then interactive with other Components in/after <code>Start</code></p></li></ul><h3 id="6-The-best-practice-of-reference-GameObject-Resources-in-MonoBehaviour"><a href="#6-The-best-practice-of-reference-GameObject-Resources-in-MonoBehaviour" class="headerlink" title="6, The best practice of reference GameObject/Resources in MonoBehaviour"></a>6, The best practice of reference GameObject/Resources in MonoBehaviour</h3><ul><li><p>Static GameObject in the Scene</p><p>we can define <code>public</code> field in MonoBehaviour and add it to the GameObject and drag the corresponding target into the Component in the editor <code>Inspector</code></p></li><li><p>Dynamic GameObject created in runtime</p><p>we can do it like step 1 but we drag the prefab to the field, and then we will call <code>Instantiate(prefab)</code> to create GameObject, further more, we can create GameObject pool for reusing the GameObject without create it and destroy it again and again.</p></li><li><p>Don’t use <code>GameObject.Find</code>, if you have to, use <code>this.transform.Find</code> to find in children instead.</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Unity3D </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Unity3D </tag>
            
            <tag> Architecture </tag>
            
            <tag> GameObject </tag>
            
            <tag> Component </tag>
            
            <tag> Scene Graphic </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android Exclude X86 So Files</title>
      <link href="/2019/05/18/android-exclude-x86-so-files/"/>
      <url>/2019/05/18/android-exclude-x86-so-files/</url>
      
        <content type="html"><![CDATA[<p>We need remove any dynamic library files such as x86, x86_64 in android for reduce APK file size.</p><p>That’s how we can do it:</p><p>Set <code>abiFilters</code> in file <code>build.gradle</code> that under application module</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">android &#123;</span><br><span class="line">    defaultConfig &#123;</span><br><span class="line">        ...</span><br><span class="line">        ndk &#123;</span><br><span class="line">            abiFilters <span class="string">"arm64-v8a"</span>, <span class="string">"armeabi-v7a"</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>The above configs will keep <code>arm64-v8a</code> and <code>armeabi-v7a</code>, and remove <code>x86</code>, <code>x86_64</code>, <code>mips</code> etc.</p><p>If you want to remove <code>x86</code>, <code>x86_64</code> in release mode only, you should move the above configs to <code>buildTypes</code>:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">android &#123;</span><br><span class="line">    defaultConfig &#123;...&#125;</span><br><span class="line">    buildTypes &#123;</span><br><span class="line">        release &#123;</span><br><span class="line">            ndk &#123;</span><br><span class="line">                abiFilters <span class="string">"arm64-v8a"</span>, <span class="string">"armeabi-v7a"</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
            <tag> ABI filters </tag>
            
            <tag> x86 </tag>
            
            <tag> x86_64 </tag>
            
            <tag> armeabi </tag>
            
            <tag> mips </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android Hide Navigation Bar Automatically</title>
      <link href="/2019/03/10/android-hide-navigation-bar-automatically/"/>
      <url>/2019/03/10/android-hide-navigation-bar-automatically/</url>
      
        <content type="html"><![CDATA[<p>If you want to hide the navigation bar and use full screen area to draw your content, you can just do it with <code>view.setSystemUiVisibility</code> in function <code>onWindowFocusChanged</code> of class <code>Activity</code><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onWindowFocusChanged</span><span class="params">(<span class="keyword">boolean</span> hasFocus)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onWindowFocusChanged(hasFocus);</span><br><span class="line">    <span class="keyword">if</span> (hasFocus) &#123;</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">int</span> visibility;</span><br><span class="line">        <span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= <span class="number">19</span>) &#123;</span><br><span class="line">            visibility = View.SYSTEM_UI_FLAG_HIDE_NAVIGATION</span><br><span class="line">                    | View.SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION</span><br><span class="line">                    | View.SYSTEM_UI_FLAG_IMMERSIVE_STICKY</span><br><span class="line">                    | View.SYSTEM_UI_FLAG_LAYOUT_STABLE;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            visibility = View.SYSTEM_UI_FLAG_HIDE_NAVIGATION</span><br><span class="line">                    | View.SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION</span><br><span class="line">                    | View.SYSTEM_UI_FLAG_LAYOUT_STABLE;</span><br><span class="line">        &#125;</span><br><span class="line">        getWindow().getDecorView().setSystemUiVisibility(getWindow().getDecorView().getSystemUiVisibility() | visibility);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><ol><li>The flag <code>View.SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION</code> indicates that the layout content will draw behind the navigation bar</li><li>The flag <code>View.SYSTEM_UI_FLAG_LAYOUT_STABLE</code> indicates that the layout height will not changes when the system ui appear and disapper</li><li>The flag <code>View.SYSTEM_UI_FLAG_IMMERSIVE_STICKY</code> indicates that the system ui will automatically disapper after it appear for seconds</li><li>The flag <code>View.SYSTEM_UI_FLAG_HIDE_NAVIGATION</code> indicates that the navigation bar will be hidden</li><li>The final result<br><img src="auto-hide.gif" alt></li></ol>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
          <category> UI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
            <tag> Navigation Bar </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Node.js Express With Redis</title>
      <link href="/2019/03/09/Node-js-Express-with-Redis/"/>
      <url>/2019/03/09/Node-js-Express-with-Redis/</url>
      
        <content type="html"><![CDATA[<ol><li>Install redis with <code>npm install redis --save</code></li><li><p>We require <code>redis</code> and <code>createClient</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> redis = <span class="built_in">require</span>(<span class="string">'redis'</span>)</span><br><span class="line"><span class="keyword">var</span> redisconn = redis.createClient(<span class="number">6379</span>, <span class="string">'127.0.0.1'</span>)</span><br></pre></td></tr></table></figure></li><li><p>We can use the redis now</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> key = <span class="string">'test'</span></span><br><span class="line">redisconn.get(key, <span class="function"><span class="keyword">function</span>(<span class="params">value</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'key '</span> + key + <span class="string">' is '</span> + value)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>We can use redis in Express</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">app.get(<span class="string">'/api'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> key = req.query.key</span><br><span class="line">    redisconn.get(key, <span class="function"><span class="keyword">function</span>(<span class="params">value</span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'key '</span> + key + <span class="string">' is '</span> + value)</span><br><span class="line">        res.send(value)</span><br><span class="line">     &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> Node.js </category>
          
          <category> Redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Node.js </tag>
            
            <tag> Express </tag>
            
            <tag> Redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Node.js Express Base64 Decode</title>
      <link href="/2019/03/09/Node-js-express-base64-decode/"/>
      <url>/2019/03/09/Node-js-express-base64-decode/</url>
      
        <content type="html"><![CDATA[<p>let we have an url<br><code>http://www.test.com/api?data=YWN0aW9uPWRlbGV0ZSZ1aWQ9MjU0MzI=</code></p><ol><li><p>We can use <code>Buffer</code> to decode the data <code>Buffer.from(data, &#39;base64&#39;)</code></p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">app.get(<span class="string">'/api'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> data = req.query.data</span><br><span class="line">    <span class="keyword">var</span> bytes = Buffer.from(data, <span class="string">'base64'</span>)</span><br><span class="line">    <span class="keyword">var</span> realQuery = bytes.toString()</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p> The <code>realQuery</code> is below<br> <img src="query-string.png" alt></p></li><li><p>Now we get the real query strings and we require Node.js module <code>querystring</code> to parse it</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> queryParser = <span class="built_in">require</span>(<span class="string">'querystring'</span>)</span><br><span class="line"><span class="keyword">var</span> jsonData = queryParser.parse(realQuery)</span><br><span class="line"><span class="built_in">console</span>.log(jsonData)</span><br></pre></td></tr></table></figure></li><li><p>The result<br><img src="base64-result.png" alt></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Node.js </category>
          
          <category> Express </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Node.js </tag>
            
            <tag> express </tag>
            
            <tag> base64 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo Quick Start Guide</title>
      <link href="/2019/03/09/hexo-quick-start-guide/"/>
      <url>/2019/03/09/hexo-quick-start-guide/</url>
      
        <content type="html"><![CDATA[<h2 id="Guide"><a href="#Guide" class="headerlink" title="Guide"></a>Guide</h2><ol><li><p>Install hexo globally</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure></li><li><p>Create your site</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo init &lt;folder&gt;</span><br><span class="line"><span class="built_in">cd</span> &lt;folder&gt;</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure></li><li><p>Configurations see <a href="https://hexo.io/docs/configuration" target="_blank" rel="noopener">Configuration</a></p></li><li><p>Deploy the site to github</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo deploy -g</span><br></pre></td></tr></table></figure></li></ol><h2 id="FIX"><a href="#FIX" class="headerlink" title="FIX"></a>FIX</h2><ol><li><p>The theme styles are changed but not regenerate</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo deploy -g</span><br></pre></td></tr></table></figure></li><li><p>Code is not support <code>shell</code> language, you can set it with <code>bash</code> as well</p></li><li><p>Hexo only support inline code with format ``code``</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> guide </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Node.js Express Simple Guide</title>
      <link href="/2019/03/08/nodejs-express-simple/"/>
      <url>/2019/03/08/nodejs-express-simple/</url>
      
        <content type="html"><![CDATA[<h2 id="Guide"><a href="#Guide" class="headerlink" title="Guide"></a>Guide</h2><ol><li><p>Create a folder, eg. <code>server</code><br><img src="create-folder.png" alt></p></li><li><p>Enter folder <code>server</code> and init nodejs project<br><img src="init-project.png" alt></p></li><li><p>Install <code>express</code> with <code>npm install express --save</code><br><img src="express-installed.png" alt></p></li><li><p>Open folder <code>server</code> in VSCode<br><img src="open-vscode.png" alt></p></li><li><p>Create <code>index.js</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> express = <span class="built_in">require</span>(<span class="string">"express"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> app = express()</span><br><span class="line"></span><br><span class="line">app.get(<span class="string">'/api'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">request, response</span>)</span>&#123;</span><br><span class="line">    <span class="comment">// http://127.0.0.1/api?abc=123</span></span><br><span class="line">    response.send(request.query)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> server = app.listen(<span class="number">80</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"runing at 80"</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>Start Running<br><img src="start-running.png" alt><br><img src="running.png" alt><br><img src="result.png" alt></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Node.js </category>
          
          <category> Express </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Node.js </tag>
            
            <tag> express </tag>
            
            <tag> guide </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Layabox Engine Mouse as Icon</title>
      <link href="/2019/01/28/laya-animation-mouse-icon/"/>
      <url>/2019/01/28/laya-animation-mouse-icon/</url>
      
        <content type="html"><![CDATA[<h2 id="Scenario"><a href="#Scenario" class="headerlink" title="Scenario"></a>Scenario</h2><p>replace mouse pointer with images<br><img src="hit-animation.gif" alt title="hit animation"></p><ol><li><p>Create UI<br>we create an ui scene in editor with embed mode and View type<br><img src="create-ui.png" alt title="create ui"></p></li><li><p>Create Image node<br><img src="create-image.png" alt title="create image"></p></li><li><p>Set Image Skin<br>set the Image skin to the mouse icon image file<br><img src="set-skin.png" alt title="set skin"></p></li><li><p>Create Animation<br>create the animation with the Image node rotation from 20 -&gt; -20 -&gt; 20<br><img src="hit-animation.png" alt title="hit animation"></p></li><li><p>Publish UI<br>press F12 to publish the ui file src/ui/layaMaxUI.ts</p></li><li><p>Create the hammer class</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;ui&#125; <span class="keyword">from</span> <span class="string">"./ui/layaMaxUI"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="class"><span class="keyword">class</span> <span class="title">HammerUI</span> <span class="keyword">extends</span> <span class="title">ui</span>.<span class="title">hammerUI</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">constructor</span>() &#123; <span class="keyword">super</span>(); &#125;</span><br><span class="line">    </span><br><span class="line">    onEnable(): <span class="keyword">void</span> &#123;</span><br><span class="line">        Laya.Mouse.hide();</span><br><span class="line">        Laya.stage.on(Laya.Event.MOUSE_MOVE, <span class="keyword">this</span>, <span class="keyword">this</span>.onMouseMove);</span><br><span class="line">        Laya.stage.on(Laya.Event.MOUSE_DOWN, <span class="keyword">this</span>, <span class="keyword">this</span>.onMouseDown);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    onMouseDown()&#123;</span><br><span class="line">        <span class="keyword">this</span>.hit.play(<span class="number">0</span>, <span class="literal">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    onMouseMove()&#123;</span><br><span class="line">        <span class="keyword">this</span>.pos(Laya.stage.mouseX - <span class="keyword">this</span>.width/<span class="number">2</span>, Laya.stage.mouseY - <span class="keyword">this</span>.height/<span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    onDisable(): <span class="keyword">void</span> &#123;</span><br><span class="line">        Laya.Mouse.show();</span><br><span class="line">        Laya.stage.off(Laya.Event.MOUSE_DOWN, <span class="keyword">this</span>, <span class="keyword">this</span>.onMouseDown);</span><br><span class="line">        Laya.stage.off(Laya.Event.MOUSE_MOVE, <span class="keyword">this</span>, <span class="keyword">this</span>.onMouseMove);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>Use it<br>and we can add the HammerUI to the Laya.stage and it works.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Laya.stage.addChild(<span class="keyword">new</span> HammerUI());</span><br></pre></td></tr></table></figure></li><li><p>Final result<br><img src="final-result.gif" alt title="final result"></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Layabox Engine </category>
          
      </categories>
      
      
        <tags>
            
            <tag> layabox </tag>
            
            <tag> game engine </tag>
            
            <tag> mouse </tag>
            
        </tags>
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>Tags</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>About Me</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[<p>I am a developer.<br>Any question? Please feel free to contact hualin at joys.mobi</p>]]></content>
      
    </entry>
    
    
  
</search>
